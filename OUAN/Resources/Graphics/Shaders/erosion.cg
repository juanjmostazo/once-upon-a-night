
//Texture samplers

sampler texture0 : register(s0);
sampler texture1 : register(s1);
sampler texture2 : register(s2);

// General functions

float2 scrollUV(in float2 uv,in float2 scroll)
{
    uv.x=uv.x+scroll.x;
    uv.y=uv.y+scroll.y; 
    return uv;
}

float2 calculateUV(in float2 uv,in float3 scroll_animation)
{
    uv = scrollUV(uv,float2(scroll_animation.x,scroll_animation.y));
    return uv;
}

float2 calculateBlendingTextureUV(in float2 uv, in float3 displacement, in float3 scroll_blending,in float tiling)
{                  
    uv = scrollUV(uv,float2(scroll_blending.x+displacement.x,scroll_blending.y+displacement.y));  
    uv = uv*tiling;    
    return uv;
}


// Basic VS main

void erosionVS
(
    in float4 inPos : POSITION,
    in float2 inUV0 : TEXCOORD0,
    out float4 pos : POSITION,
    out float2 UV0 : TEXCOORD0,

    uniform float4x4 worldViewProj
)
{
    pos = mul(worldViewProj, inPos);
    UV0 = inUV0;
}

// Erosion FS main

void erosionFS(
in float4 color : COLOR,
in float2 uv : TEXCOORD0,
uniform float3 displacement,
uniform float3 scroll_blending,
uniform float3 scroll_animation,
uniform float mix_factor,
uniform float blending,
uniform float tiling,
out float4 oColor : COLOR)
{
    float4 erosion_info;
    float normalized_blending_factor;  
    
    uv=calculateUV(uv,scroll_animation);
    erosion_info=tex2D(texture2,calculateBlendingTextureUV(uv,displacement,scroll_blending,tiling));  
    
    if(erosion_info.x>=mix_factor+blending || mix_factor==0.0f)
    {
       oColor=tex2D(texture0,uv);
    }
    else if(erosion_info.x<=mix_factor-blending || mix_factor==1.0f)
    {
       oColor=tex2D(texture1,uv);
    }   
    else
    {
       normalized_blending_factor=(erosion_info.x-(mix_factor-blending))/(2*blending);
       oColor=normalized_blending_factor*tex2D(texture0,uv)+(1-normalized_blending_factor)*tex2D(texture1,uv); 
    }
}

// Erosion Transparent FS main

void erosion_transparentFS(
in float4 color : COLOR,
in float2 uv : TEXCOORD0,
uniform float3 displacement,
uniform float3 scroll_blending,
uniform float3 scroll_animation,
uniform float mix_factor,
uniform float blending,
uniform float tiling,
out float4 oColor : COLOR)
{
    float4 erosion_info;
    float normalized_blending_factor;
    
    uv=calculateUV(uv,scroll_animation);
    erosion_info=tex2D(texture2,calculateBlendingTextureUV(uv,displacement,scroll_blending,tiling));  
    
    color=tex2D(texture0,uv);
    
    oColor=color;
    
    if(erosion_info.x>=mix_factor+blending || mix_factor==0.0f)
    {
       color.w=1.0f;
    }
    else if(erosion_info.x<=mix_factor-blending || mix_factor==1.0f)
    {
       color.w=0.0f;
    }   
    else
    {
       normalized_blending_factor=(erosion_info.x-(mix_factor-blending))/(2*blending);
       color.w=normalized_blending_factor;
    }
    
    if(oColor.w>color.w)
    {
        oColor.w=color.w;
    }

}
