material basic_texture
{
	technique
	{
		pass
		{
			fragment_program_ref rim_normal_diffuse_fs{}
			vertex_program_ref rim_normal_diffuse_vs{}
			texture_unit diffuse_texture
			{
				texture default.png
				mipmap_bias -1
			}
			texture_unit normal_texture
			{
				texture white.dds
				mipmap_bias -2
			}
			texture_unit lightmap
			{
				texture white.dds
			}				
		}
	}
}

material basic_shadow_reciever
{
	technique
	{
		pass
		{
			fragment_program_ref rim_normal_diffuse_fs{}
			vertex_program_ref rim_normal_diffuse_vs{}
			texture_unit diffuse_texture
			{
				texture default.png
				mipmap_bias -1
			}
			texture_unit normal_texture
			{
				texture white.dds
				mipmap_bias -2
			}
			texture_unit lightmap
			{
				texture white.dds
			}				
		}
        // Now do the lighting pass
        // NB we don't do decal texture here because this is repeated per light
        pass Lighting
        {
            // base colours, not needed for rendering, but as information
            // to lighting pass categorisation routine
            ambient 0 0 0 
 
            // do this for each light
            //iteration once_per_light
 
            scene_blend modulate
 
            // Vertex program reference
            vertex_program_ref OUAN/DepthShadowmap/ReceiverVP
            {
            }
 
            // Fragment program
            fragment_program_ref OUAN/DepthShadowmap/ReceiverFP
            {
            }
 
            texture_unit 0
            {
                content_type shadow
                tex_address_mode clamp
                filtering none
            }
        }
	}
}

material alpha_test_texture
{
	technique
	{
		pass
		{
			alpha_rejection greater 128
			depth_write on
			alpha_to_coverage on

			fragment_program_ref rim_normal_diffuse_fs{}
			vertex_program_ref rim_normal_diffuse_vs{}
			texture_unit diffuse_texture
			{
				texture default.png
				mipmap_bias -1
			}
			texture_unit normal_texture
			{
				texture white.dds
				mipmap_bias -2
			}	
			texture_unit lightmap
			{
				texture white.dds
			}		
		}
	}
}

material basic_anim_texture
{
	technique
	{
		pass
		{
			fragment_program_ref rim_normal_diffuse_fs{}
			vertex_program_ref rim_normal_diffuse_vs{}
			texture_unit diffuse_texture
			{
				anim_texture default.png 1 2.5
				mipmap_bias -1
			}
			texture_unit normal_texture
			{
				anim_texture white.dds 1 2.5
				mipmap_bias -2
			}
			texture_unit lightmap
			{
				anim_texture white.dds 1 2.5
			}				
		}
	}
}

material alpha_test_anim_texture
{
	technique
	{
		pass
		{
			alpha_rejection greater 128
			depth_write on
			alpha_to_coverage on

			fragment_program_ref rim_normal_diffuse_fs{}
			vertex_program_ref rim_normal_diffuse_vs{}
			texture_unit diffuse_texture
			{
				anim_texture default.png 1 2.5
				mipmap_bias -1
			}
			texture_unit normal_texture
			{
				anim_texture white.dds 1 2.5
				mipmap_bias -2
			}	
			texture_unit lightmap
			{
				anim_texture white.dds 1 2.5
			}		
		}
	}
}

material alpha_test_anisotropic
{
	technique
	{
		pass
		{
			alpha_rejection greater 128
			depth_write on

			fragment_program_ref rim_normal_diffuse_fs{}
			vertex_program_ref rim_normal_diffuse_vs{}
			texture_unit diffuse_texture
			{
				max_anisotropy 16
				mipmap_bias -2
				filtering anisotropic
				texture default.png
			}
			texture_unit normal_texture
			{
				texture white.dds
				mipmap_bias -2
			}
			texture_unit lightmap
			{
				texture white.dds
			}			
		}
	}
}


material alpha_blending_texture
{
	transparency_casts_shadows true

	technique
	{
		pass
		{
			cull_hardware none
			cull_software none

			scene_blend alpha_blend
			depth_write off

			fragment_program_ref rim_normal_diffuse_fs{}
			vertex_program_ref rim_normal_diffuse_vs{}
			texture_unit diffuse_texture
			{
				texture default.png
				mipmap_bias -1
			}
			texture_unit normal_texture
			{
				texture white.dds
				mipmap_bias -2
			}
			texture_unit lightmap
			{
				texture white.dds
			}			
		}
	}

}

material alpha_blending_scrolling_texture: alpha_blending_texture
{
	technique
	{
		pass
		{
			texture_unit diffuse_texture
			{
				scroll_anim 0 -0.2
				texture default.png
			}
			texture_unit lightmap
			{
				texture white.dds
			}
		}
	}
}
