void erosionVS
(
    in float4 inPos : POSITION,
    in float2 inUV0 : TEXCOORD0,
    out float4 pos : POSITION,
    out float2 UV0 : TEXCOORD0,

    uniform float4x4 worldViewProj
)
{

    pos = mul(worldViewProj, inPos);

    UV0 = inUV0;
}

void erosionFS(
in float4 color : COLOR,
in float2 uv : TEXCOORD0,
uniform float displacement,
uniform float mix_factor,
uniform float blending,
uniform float tiling,
uniform sampler2D texture0 : TEXUNIT0,
uniform sampler2D texture1 : TEXUNIT1,
uniform sampler2D texture2 : TEXUNIT2,
out float4 oColor : COLOR)
{
    float4 random;
    float normalized_blending_factor;
    random=tex2D(texture2,uv*tiling);
    random=random;
    
    if(random.x>mix_factor+blending)
    {
       oColor=tex2D(texture0,uv);
    }
    else if(random.x<=mix_factor+blending && random.x>=mix_factor-blending)
    {
       normalized_blending_factor=(random.x-(mix_factor-blending))/(2*blending);
       oColor=normalized_blending_factor*tex2D(texture0,uv)+(1-normalized_blending_factor)*tex2D(texture1,uv); 
    }
    else
    {
       oColor=tex2D(texture1,uv);
    }
}

//WORKING RANDOM SHADER
//void erosionFS(
//in float4 color : COLOR,
//in float2 uv : TEXCOORD0,
//uniform float mix_factor,
//uniform sampler2D texture0 : TEXUNIT0,
//uniform sampler2D texture1 : TEXUNIT1,
//uniform sampler2D texture2 : TEXUNIT2,
//out float4 oColor : COLOR)
//{
//    float4 random;
//    random=tex2D(texture2,uv);
//    
//    if(random.x>mix_factor)
//    {
//       oColor=tex2D(texture0,uv);
//    }
//    else
//    {
//       oColor=tex2D(texture1,uv);
//    }
//    //oColor=(1.0f-mix_factor)*tex2D(texture0,uv)+mix_factor*tex2D(texture1,uv);
//}

